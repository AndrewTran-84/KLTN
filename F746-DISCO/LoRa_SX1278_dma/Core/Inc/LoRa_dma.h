/*
 * LoRa_dma.h
 *
 *  Created on: Oct 29, 2025
 *      Author: ADMIN
 */

/* LoRa_dma.h - minimal DMA-enabled SPI2 LoRa interface (template)
   Assumes:
     - hspi2 (SPI_HandleTypeDef) is generated by CubeMX
     - NSS -> GPIO (PI0), RST -> GPIO (PA15), DIO0 -> EXTI PI2
     - HAL IRQ handlers and DMA init provided by CubeMX.
*/

#ifndef LORA_DMA_H_
#define LORA_DMA_H_

#include "stdint.h"
#include "stm32f7xx_hal.h"

/* Extern handles (generated by CubeMX) */
extern SPI_HandleTypeDef hspi2;   // must exist
extern UART_HandleTypeDef huart1; // optional for debug prints

/* Pin mappings — đảm bảo CubeMX khởi tạo các pin này đúng tên / port */
/* Nếu CubeMX dùng tên khác, hãy đổi lại tương ứng trong project của bạn */
#ifndef LORA_NSS_GPIO_Port
#define LORA_NSS_GPIO_Port  GPIOI
#define LORA_NSS_Pin        GPIO_PIN_0   /* PI0 as CS (NSS) */
#endif

#ifndef LORA_RST_GPIO_Port
#define LORA_RST_GPIO_Port  GPIOA
#define LORA_RST_Pin        GPIO_PIN_15  /* PA15 as RST */
#endif

#ifndef LORA_DIO0_GPIO_Port
#define LORA_DIO0_GPIO_Port GPIOI
#define LORA_DIO0_Pin       GPIO_PIN_2   /* PI2 as DIO0 (EXTI) */
#endif

/* Public API */
int  LoRa_Init(void); /* init HW + configure SX1278 registers -> return 0 on OK */
void LoRa_Reset(void);
int  LoRa_SetFrequency(uint32_t freqHz);
int  LoRa_Transmit_DMA(uint8_t *buffer, uint16_t len, uint32_t timeout_ms);
int  LoRa_receive_ready(void); /* check flag if a packet was received (called from main) */
int  LoRa_read_payload(uint8_t *dst, uint8_t maxlen);

/* Callbacks used by application (to be invoked from HAL IRQ handlers) */
void LoRa_SPI_TxCplt_Callback(SPI_HandleTypeDef *hspi); /* call from HAL_SPI_TxCpltCallback */
void LoRa_DIO0_Callback(void); /* call from HAL_GPIO_EXTI_Callback when DIO0 triggers */

#endif /* LORA_DMA_H_ */
